<?xml version="1.0"?>
<RBProject version="2009r2.1">
<block type="Module" ID="1207022430">
 <ObjName>KarelWorld</ObjName>
 <ObjContainerID>1873437378</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>KarelDrawable</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>DrawInContext</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DrawInContext(viaScripter as KarelScripter)</SourceLine>
   <SourceLine>DrawWorldBackground viaScripter</SourceLine>
   <SourceLine>for each bp as KarelBeeper in mBeepers</SourceLine>
   <SourceLine>bp.DrawInContext viaScripter</SourceLine>
   <SourceLine>next </SourceLine>
   <SourceLine>for each w as KarelWall in mWalls</SourceLine>
   <SourceLine>w.DrawInContext viaScripter</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>for each r as KarelRobot in mRobots</SourceLine>
   <SourceLine>r.DrawInContext viaScripter</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>viaScripter as KarelScripter</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(inAvenues as integer, inStreets as integer)</SourceLine>
   <SourceLine>mWallCleaner = new RegEx</SourceLine>
   <SourceLine>mWallCleaner.Options.ReplaceAllMatches = true</SourceLine>
   <SourceLine>mWallCleaner.SearchPattern = "([0-9])[ ]+([0-9])"</SourceLine>
   <SourceLine>mWallCleaner.ReplacementPattern = "\1, \2"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mNumAvenues = inAvenues</SourceLine>
   <SourceLine>mNumStreets = inStreets</SourceLine>
   <SourceLine>MaxRobotsAllowed = 1</SourceLine>
   <SourceLine>Margin = 20</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>inAvenues as integer, inStreets as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>IsWallBetween</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsWallBetween(ave1 as integer, street1 as integer, ave2 as integer, street2 as integer) As Boolean</SourceLine>
   <SourceLine>for each w as KarelWall in mWalls</SourceLine>
   <SourceLine>if w.IsBetween( ave1, street1, ave2, street2 ) then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>ave1 as integer, street1 as integer, ave2 as integer, street2 as integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsBeeperAt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsBeeperAt(avenue as integer, street as integer) As Boolean</SourceLine>
   <SourceLine>for each bp as KarelBeeper in mBeepers</SourceLine>
   <SourceLine>if bp.AtLocation( avenue, street ) then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>avenue as integer, street as integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>PutBeeperAt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PutBeeperAt(avenue as integer, street as integer)</SourceLine>
   <SourceLine>mBeepers.Append new KarelBeeper( avenue, street )</SourceLine>
   <SourceLine>UpdateObservers</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>avenue as integer, street as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PickBeeperFrom</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function PickBeeperFrom(avenue as integer, street as integer) As Boolean</SourceLine>
   <SourceLine>for i as integer = 0 to UBound(mBeepers)</SourceLine>
   <SourceLine>dim bp as KarelBeeper = mBeepers(i)</SourceLine>
   <SourceLine>if bp.AtLocation( avenue, street ) then</SourceLine>
   <SourceLine>mBeepers.Remove i</SourceLine>
   <SourceLine>UpdateObservers</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>avenue as integer, street as integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateObservers</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateObservers()</SourceLine>
   <SourceLine>for each obs as KarelWorldObserver in mObservers</SourceLine>
   <SourceLine>obs.WorldUpdated self</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DrawWorldBackground</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DrawWorldBackground(viaScripter as KarelScripter)</SourceLine>
   <SourceLine>dim width as integer = viaScripter.Width</SourceLine>
   <SourceLine>dim height as integer = viaScripter.Height</SourceLine>
   <SourceLine>const marginPenSize = 4</SourceLine>
   <SourceLine>dim insetFrame as integer = Margin - marginPenSize // the thick line is inside the margin</SourceLine>
   <SourceLine>dim doubleInset as integer  = 2*insetFrame</SourceLine>
   <SourceLine>dim frameWidth as integer = width - doubleInset</SourceLine>
   <SourceLine>dim frameHeight as integer = height - doubleInset</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>viaScripter.PenSize = marginPenSize</SourceLine>
   <SourceLine>viaScripter.PenColor = viaScripter.white</SourceLine>
   <SourceLine>viaScripter.FillRect 0, 0, width, height  // clear background</SourceLine>
   <SourceLine>viaScripter.PenColor = viaScripter.black</SourceLine>
   <SourceLine>viaScripter.DrawRect insetFrame, insetFrame, frameWidth, frameHeight</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>viaScripter.PenSize = 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>viaScripter.PenColor = viaScripter.blue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// vertical gridlines</SourceLine>
   <SourceLine>//dim aveSep as integer = frameWidth / (mNumAvenues+1)  // gap either side of lines</SourceLine>
   <SourceLine>dim aveSep as integer = viaScripter.AvenueGapX</SourceLine>
   <SourceLine>dim aveY1 as integer = Margin</SourceLine>
   <SourceLine>dim aveY2 as integer = height - Margin</SourceLine>
   <SourceLine>dim x as integer = Margin</SourceLine>
   <SourceLine>for i as integer = 1 to mNumAvenues</SourceLine>
   <SourceLine>x = x + aveSep</SourceLine>
   <SourceLine>viaScripter.DrawLine x, aveY1, x, aveY2</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// horizontal gridlines</SourceLine>
   <SourceLine>//dim streetSep as integer = frameHeight/ (mNumStreets + 1)</SourceLine>
   <SourceLine>dim streetSep as integer = viaScripter.StreetGapY</SourceLine>
   <SourceLine>dim streetX1 as integer = Margin</SourceLine>
   <SourceLine>dim streetX2 as integer = width - Margin</SourceLine>
   <SourceLine>dim y as integer = Margin</SourceLine>
   <SourceLine>for i as integer = 1 to mNumStreets</SourceLine>
   <SourceLine>y = y + streetSep</SourceLine>
   <SourceLine>viaScripter.DrawLine streetX1, y, streetX2, y</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>viaScripter as KarelScripter</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>AddObserver</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddObserver(obs as KarelWorldObserver)</SourceLine>
   <SourceLine>mObservers.Append obs</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>obs as KarelWorldObserver</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RemoveObserver</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RemoveObserver(obs as KarelWorldObserver)</SourceLine>
   <SourceLine>dim ix as integer = mObservers.IndexOf( obs )</SourceLine>
   <SourceLine>if ix = -1 then return</SourceLine>
   <SourceLine>mObservers.Remove ix</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>obs as KarelWorldObserver</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Robot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Robot(street as integer, avenue as integer, facing as integer, initialBeepers as integer)</SourceLine>
   <SourceLine>mRobots.Append new KarelRobot(avenue, street, facing, initialBeepers)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>street as integer, avenue as integer, facing as integer, initialBeepers as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>NumAvenues</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function NumAvenues() As integer</SourceLine>
   <SourceLine>return mNumAvenues</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Method>
  <ItemName>NumStreets</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function NumStreets() As integer</SourceLine>
   <SourceLine>return mNumStreets</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Beepers</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Beepers(street as integer, avenue as integer, numBeepers as integer)</SourceLine>
   <SourceLine>// creates a beeper</SourceLine>
   <SourceLine>// this method is here for consistency when scripting map creation</SourceLine>
   <SourceLine>for i as integer = 1 to numBeepers</SourceLine>
   <SourceLine>PutBeeperAt avenue, street</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>street as integer, avenue as integer, numBeepers as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Wall</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Wall(street as integer, avenue as integer, edgeFacing as integer)</SourceLine>
   <SourceLine>// note that whilst the java docs say Walls can either be north or west of an intersection (1 or 4 respectively</SourceLine>
   <SourceLine>// we allow on all four sides</SourceLine>
   <SourceLine>const cellsLong = 1  // until fix bug with KarelWall.IsBetween, then need to duplicate method as optional params don't work in RBScript</SourceLine>
   <SourceLine>mWalls.Append new KarelWall(avenue, street, edgeFacing, cellsLong)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>street as integer, avenue as integer, edgeFacing as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>World</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub World(inStreets as integer, inAvenues as integer)</SourceLine>
   <SourceLine>mNumStreets = inStreets</SourceLine>
   <SourceLine>mNumAvenues = inAvenues</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>inStreets as integer, inAvenues as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CleanupWorld</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CleanupWorld(toClean as String) As string</SourceLine>
   <SourceLine>if toClean.LenB = 0 then return toClean  // efficient and safe trivial empty handling</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// regex will only replace first match in a row so Beepers 3 3 1</SourceLine>
   <SourceLine>// takes two passes to convert to Beepers 3, 3, 1</SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>toClean = mWallCleaner.Replace(toClean)</SourceLine>
   <SourceLine>loop until mWallCleaner.Search( toClean ) is nil</SourceLine>
   <SourceLine>return toClean</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>toClean as String</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>Robot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Robot(street as integer, avenue as integer, facing as integer)</SourceLine>
   <SourceLine>mRobots.Append new KarelRobot(avenue, street, facing, 0)  // no beepers</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>street as integer, avenue as integer, facing as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Reset</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Reset()</SourceLine>
   <SourceLine>redim mBeepers(-1)</SourceLine>
   <SourceLine>redim mWalls(-1)</SourceLine>
   <SourceLine>redim mRobots(-1)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>Manages the state of the world including being able to draw the map</NoteLine>
   <NoteLine>(very likely to provide user overrides for this later)</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Map Creation </ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Map Creation </NoteLine>
   <NoteLine>commands from http://karel.sourceforge.net/doc/html_mono/karel.html</NoteLine>
   <NoteLine>Yes I know the coordinates they use seem to be backward, with </NoteLine>
   <NoteLine>Beepers</NoteLine>
   <NoteLine>Wall</NoteLine>
   <NoteLine>World</NoteLine>
   <NoteLine>Robot</NoteLine>
   <NoteLine>all having street first</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Here is a sample world file:</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>World 5 5</NoteLine>
   <NoteLine>Beepers 3 3 1</NoteLine>
   <NoteLine>Robot 4 3 1 0</NoteLine>
   <NoteLine>Wall 2 2 1</NoteLine>
   <NoteLine>Wall 3 2 1</NoteLine>
   <NoteLine>Wall 1 1 4</NoteLine>
   <NoteLine>Wall 2 1 4</NoteLine>
   <NoteLine>Wall 2 2 4</NoteLine>
   <NoteLine>Wall 3 1 4</NoteLine>
   <NoteLine>Wall 3 2 4</NoteLine>
   <NoteLine>Wall 3 3 4</NoteLine>
   <NoteLine>Wall 4 1 4</NoteLine>
   <NoteLine>Wall 4 2 4</NoteLine>
   <NoteLine>Wall 4 3 4</NoteLine>
   <NoteLine>Wall 4 4 4</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>to convert that into a comma-separated version we can use, need to use regexp</NoteLine>
   <NoteLine>([0-9])[ ]+([0-9])</NoteLine>
   <NoteLine>replaced with</NoteLine>
   <NoteLine>\1, \2</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Which is the responsibility of the caller but we provide the method CleanupWorld for them to use</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>Margin</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Margin As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Margin As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mNumStreets</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mNumStreets As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mNumStreets As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mNumAvenues</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mNumAvenues As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mNumAvenues As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mBeepers()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mBeepers() As KarelBeeper</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mBeepers() As KarelBeeper</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mObservers()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mObservers() As KarelWorldObserver</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mObservers() As KarelWorldObserver</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mRobots()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mRobots() As KarelRobot</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mRobots() As KarelRobot</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>MaxRobotsAllowed</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MaxRobotsAllowed As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MaxRobotsAllowed As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mWalls()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mWalls() As KarelWall</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mWalls() As KarelWall</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mWallCleaner</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mWallCleaner As RegEx</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mWallCleaner As RegEx</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Margin</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxRobotsAllowed</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
